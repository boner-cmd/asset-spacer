// a tool to space out bulk-imported assets across a grid
// author: dimelo waterson (@boner-cmd)

// from help.autodesk.com sample MEL code
// https://help.autodesk.com/view/MAYAUL/2020/ENU/index.html?contextId=COMMANDS-INDEX

// and publicly-accessible content from Professor Alan Price's Autumn 2005
// "Experimental Scripting for Animation in Maya" course at Ohio State University
// https://www.asc.ohio-state.edu/price.566/courses/694/

// TODO correct offset in checkbox label

global proc aSpacer()
{
  if (`window -exists aspWindow`) deleteUI aspWindow;

//  float $spaceInput = 0;
//  float $matrixRatio = 1;
//  int $centerChk = 0;

  window
    -title "Asset Spacer"
    -iconName "aspWindow"
    -maximizeButton false
    -resizeToFitChildren true
    -sizeable false
    "aspWindow";
  formLayout -p aspWindow "testForm";
  text
    -label "Matrix object spacing"
    "spacingLabel";
  floatField
    -minValue 0
    -value 0
    -precision 2
    -changeCommand "$spaceInput = `floatField -query -value spacingField`"
    "spacingField";
  radioButtonGrp
    -numberOfRadioButtons 4
    -label "Matrix dimensions (approximate)"
    -labelArray4 "1x1" "4x3" "3x2" "2x1"
    -annotation1 "Ratio of 1.00"
    -annotation2 "Ratio of 1.33"
    -annotation3 "Ratio of 1.50"
    -annotation4 "Ratio of 2.00"
    -onCommand1 "$matrixRatio = 1.00"
    -onCommand2 "$matrixRatio = 1.33"
    -onCommand3 "$matrixRatio = 1.50"
    -onCommand4 "$matrixRatio = 2.00"
    -columnAttach 1 "left" 0
    -columnWidth 1 166
    -columnWidth 2 40
    -columnWidth 3 40
    -columnWidth 4 40
    -columnWidth 5 40
    "matrixRadioBtn";
  button
    -label "Go"

    // make a new window and destroy the old one, then run the command
    -command "spaceObjs($spaceInput,$matrixRatio,$centerChk,$skipHidden)"
    "goButton";
  checkBoxGrp
    -numberOfCheckBoxes 2
    -label1 "Attempt to center the matrix"
    -onCommand1 "$centerChk = 1"
    -offCommand1 "$centerChk = 0"
    -label2 "Skip non-visible objects"
    -onCommand2 "$skipHidden = 1"
    -offCommand2 "$skipHidden = 0"
    "centerChk";
  formLayout -edit
    -attachForm "spacingLabel" "left" 5
    -attachForm "spacingLabel" "top" 10
    -attachControl "spacingField" "left" 5 "spacingLabel"
    -attachForm "spacingField" "top" 6
    -attachControl "matrixRadioBtn" "top" 10 "spacingLabel"
    -attachForm "matrixRadioBtn" "left" 5
    -attachControl "goButton" "top" 10 "matrixRadioBtn"
    -attachForm "goButton" "left" 5
    -attachControl "centerChk" "left" 5 "goButton"
    -attachControl "centerChk" "top" 14 "matrixRadioBtn"
    "testForm";
  showWindow aspWindow;
}

proc spaceObjs( float $spacing,float $ratio,int $center,int $skiphide) {
  string $selection[];
  $selection = `ls -sl`;
  $selectionSize = size($selection);
  if ( $selectionSize > 1 ) {
    print "More than one object selected.\n";
  } else if ( $selectionSize == 0 ) {
    print "No object selected.\n";
  } else {
    string $givenObjects[];
    $givenObjects = `listRelatives $selection`;
    $shapeCheck = `listRelatives -s $selection`;
    if ( size($shapeCheck) != 0 ) {
      print "Selection has Shape children. Are you sure a group is selected?\n";
    } else {
      int $xcount = 0;
      int $zcount = 0;
      $totalObjs = size($givenObjects);
      $algWidth = ($totalObjs * sqrt($ratio)) / sqrt($totalObjs);
      $algHeight = sqrt($totalObjs) / sqrt($ratio);
      float $spacingCorrection = ($spacing * .5);
      for ( $obj in $givenObjects ) {
        string $visobj = $obj + ".visibility";
        int $visobjval = `getAttr $visobj`;
        if ( (($visobjval == 1) && ($skiphide == 1)) || ($skiphide == 0) ) {
          string $transobj_x = $obj + ".translateX";
          string $transobj_z = $obj + ".translateZ";
          string $transobj_y = $obj + ".translateY";
          if ( $xcount >= $algWidth ) {
            $xcount = 0;
            $zcount += 1;
          }
          setAttr $transobj_y 0;
          if ( $center == 1 ) {
            float $xOffset = -(($algWidth/2) * $spacing) + $spacingCorrection;
            float $zOffset = -(($algHeight/2) * $spacing) + $spacingCorrection;
            setAttr $transobj_x (($xcount * $spacing) + $xOffset);
            setAttr $transobj_z (($zcount * $spacing) + $zOffset);
          } else {
            setAttr $transobj_x ($xcount * $spacing);
            setAttr $transobj_z ($zcount * $spacing);
          }
          $xcount += 1;
        }
      }
    }
  }
}
